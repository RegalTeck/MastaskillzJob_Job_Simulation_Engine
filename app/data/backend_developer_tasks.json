{
  "Beginner": {
    "instructions": "Create a CRUD API using FastAPI and SQLite.",
    "environment_setup": [
      "Install FastAPI",
      "Create SQLite DB",
      "Build routes"
    ],
    "constraints": ["Use POST, GET, PUT, DELETE methods"],
    "expected_deliverables": ["main.py", "models.py"]
  },
  "Intermediate": {
    "instructions": "Integrate Redis for rate limiting API requests.",
    "environment_setup": ["Install Redis", "Connect Redis with FastAPI"],
    "constraints": ["Limit to 10 requests/minute per user"],
    "expected_deliverables": ["rate_limiter.py", "test_rate_limiter.py"]
  },
  "Advanced": {
    "instructions": "Add idempotency and authentication to API endpoints.",
    "environment_setup": [
      "Implement token auth",
      "Handle idempotent operations"
    ],
    "constraints": ["No duplicate charges on retry"],
    "expected_deliverables": ["auth.py", "idempotency.py"]
  },
  "Expert": {
    "instructions": "Simulate real-time load balancing and caching strategies.",
    "environment_setup": [
      "Simulate traffic",
      "Use caching (e.g., Redis or Memcached)"
    ],
    "constraints": ["Demonstrate scalability under load"],
    "expected_deliverables": ["load_simulation.py", "cache_handler.py"]
  }
}
